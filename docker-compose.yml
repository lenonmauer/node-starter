version: '3.3'

services:
  postgres:
    container_name: postgres
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=docker
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker

  nginx:
    container_name: nginx
    image: nginx:1.17
    ports:
      - 80:80
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/var/www/html
    command: nginx -g 'daemon off;'

  mysql:
    container_name: mysql
    image: mysql:5.7
    ports:
      - 3306:3306
    volumes:
      - /userlogin/mysql/data/:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=docker
      - MYSQL_USER=docker
      - MYSQL_PASSWORD=docker

  mongo:
    container_name: mongo
    image: mongo:4
    ports:
      - 27017:27017
    volumes:
      - /userlogin/mongo/data/:/data/db
    environment:
      - MONGO_INITDB_DATABASE=docker
      - MONGO_INITDB_ROOT_USERNAME=docker
      - MONGO_INITDB_ROOT_PASSWORD=docker

  redis:
    container_name: redis
    image: redis:5
    ports:
      - 6379:6379
    volumes:
      - /userlogin/redis/data/:/data

  node:
    container_name: node
    build:
      context: .
      dockerfile: ./docker/node.dockerfile
    ports:
      - 3333:3333
    volumes:
      - ./backend:/home/app
      - /home/app/node_modules
      - /home/app/build
    environment:
      NODE_ENV: development
    #command: yarn dev
    command: yarn start
    depends_on:
      - mongo
    links:
      - mongo
    # command: yarn start
    #depends_on:
    #  - mongo
    #links:
    #  - mongo
